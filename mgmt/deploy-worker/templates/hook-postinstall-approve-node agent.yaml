---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: hook-succeeded
    #helm.sh/hook-weight: "-5"
  name: postinstall-{{ $.Values.cluster.name }}-{{ $.Values.node.name }}-approve-node-agent-job
  namespace: {{ $.Values.global.gitops.namespace }}
spec:
  template:
    spec:
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      serviceAccount: {{ $.Values.global.gitops.service_account }}
      serviceAccountName: {{ $.Values.global.gitops.service_account_name }}
      terminationGracePeriodSeconds: 30
      containers:
        - image: {{ $.Values.global.gitops.hook_image }}
          imagePullPolicy: IfNotPresent
          name: {{ $.Values.cluster.name }}-{{ $.Values.node.name }}-approve-node-agent-job
          env:
            - name: SLEEP
              value: "15"
          command:
            - /bin/bash
            - -c
            - |
              echo "Cluster Post Install Hook"
              APPROVED="Pausing $SLEEP seconds..."
              while [ "$APPROVED" != "true" ]; do
                echo "Waiting for node cu11 agent to register. ($APPROVED)"
                sleep $SLEEP
                AGENT_ID=$(oc get -n assisted-installer agent -o wide | egrep cu11 | awk '{print $1}')
                echo $AGENT_ID
                if [ $AGENT_ID != "" ]; then
                  STATUS=$(oc get agent -n assisted-installer $AGENT_ID -o jsonpath="{..spec.approved}")
                  echo $STATUS
                  if [ $STATUS = "false" ]; then
                    APPROVED="true"
                    # Set the hostname of the agent and approve the agent.
                    oc patch -n assisted-installer agent $AGENT_ID -p '{"spec":{"approved":true}}' --type merge
                  else
                    APPROVED=$STATUS
                  fi
                fi
              done
              echo "All done! Hooray!"
              sleep $SLEEP
